warning: unexpected `cfg` condition value: `intentionally_disabled`
   --> crates\flui_core\src\element\element_tree.rs:654:21
    |
654 | #[cfg(all(test, not(feature = "intentionally_disabled")))]
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `default`, `profiling`, and `serde`
    = help: consider adding `intentionally_disabled` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: `flui_core` (lib) generated 1 warning
warning: ambiguous glob re-exports
   --> crates\flui_rendering\src\lib.rs:110:13
    |
110 |     pub use crate::objects::*;
    |             ^^^^^^^^^^^^^^^^^ the name `flex` in the type namespace is first re-exported here
111 |     pub use crate::parent_data::*;
    |             --------------------- but the name `flex` in the type namespace is also re-exported here
    |
    = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
   --> crates\flui_rendering\src\lib.rs:110:13
    |
110 |     pub use crate::objects::*;
    |             ^^^^^^^^^^^^^^^^^ the name `stack` in the type namespace is first re-exported here
111 |     pub use crate::parent_data::*;
    |             --------------------- but the name `stack` in the type namespace is also re-exported here

warning: missing documentation for a module
  --> crates\flui_rendering\src\objects\mod.rs:6:1
   |
 6 | pub mod special;
   | ^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> crates\flui_rendering\src\lib.rs:45:9
   |
45 | #![warn(missing_docs)]
   |         ^^^^^^^^^^^^

warning: missing documentation for a struct field
  --> crates\flui_rendering\src\objects\text\paragraph.rs:25:5
   |
25 |     pub color: Color,
   |     ^^^^^^^^^^^^^^^^

warning: `flui_rendering` (lib) generated 4 warnings
warning: unexpected `cfg` condition name: `disabled_test`
   --> crates\flui_widgets\src\layout\expanded.rs:204:7
    |
204 | #[cfg(disabled_test)] // TODO: Update tests to new Widget API
    |       ^^^^^^^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(disabled_test)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(disabled_test)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `disabled_test`
   --> crates\flui_widgets\src\layout\flexible.rs:330:7
    |
330 | #[cfg(disabled_test)] // TODO: Update tests to new Widget API
    |       ^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(disabled_test)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(disabled_test)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `disabled_test`
   --> crates\flui_widgets\src\layout\positioned.rs:453:7
    |
453 | #[cfg(disabled_test)] // TODO: Update tests to new Widget API
    |       ^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(disabled_test)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(disabled_test)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `flui_widgets` (lib) generated 3 warnings
   Compiling flui v0.1.0 (C:\Users\vanya\RustroverProjects\flui)
    Finished `dev` profile [optimized + debuginfo] target(s) in 1.22s
     Running `target\debug\examples\widget_hello_world.exe`
=== Flui Widget Hello World ===
High-level Widget API example

Architecture:
  HelloWorldApp (StatelessWidget)
    → build() creates widget tree
    → Container → Center → Container → Text

This uses the full Widget → RenderObject → Layer pipeline!

